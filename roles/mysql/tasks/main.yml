- name: uninstall pre-installed mariadb
  yum:
    name: mariadb-libs
    state: absent

- name: add yum repository
  yum: 
    name: "{{ __repo_url }}"
    state: present

- name: intall yum-utils
  yum:
    name: yum-utils
    state: present

- name: enable yum repository
  shell: yum-config-manager --enable mysql80-community

- name: install MySQL{{ __version }}
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - mysql
    - mysql-devel
    - mysql-server
    - mysql-utilities
    - MySQL-python
  when: not ansible_check_mode

- name: start and enable server
  service:
    name: mysqld
    state: started
    enabled: yes
  when: not ansible_check_mode

- name: check if my.cnf.bk already deployed
  stat:
    path: "/etc/my.cnf.bk"
  register: default_my_conf_backup

- name: get default MySQL root users's password
  shell: less /var/log/mysqld.log | grep password | awk '{ print $NF }'
  register: mysql_default_password
  when: not default_my_conf_backup.stat.exists and __version == 8.0

- name: change root user password
  shell: mysql -u root -p'{{ mysql_default_password.stdout }}' --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ __root_new_password }}';"
  when:
    - not default_my_conf_backup.stat.exists and __version == 8.0
    - not ansible_check_mode

- name: backup default my.cnf
  shell: |
    mv /etc/my.cnf /etc/my.cnf.bk
  when: not default_my_conf_backup.stat.exists

- name: deploy my.cnf
  template:
    src: roles/mysql/templates/my.cnf.j2
    dest: "/etc/my.cnf"
    owner: root
    group: root
    mode: 0600
  when: not default_my_conf_backup.stat.exists

- name: restart mysqld
  service:
    name: mysqld
    state: restarted
  when: not ansible_check_mode

#以下未完
# - name: create database [{{ __project_db_name }}]
#   mysql_db:
#     login_user: root
#     login_password: "{{ __root_new_password }}"
#     name: "{{ __project_db_name }}"
#     state: present
#     encoding: "{{ __project_db_encoding }}"
#   when: __project_db_create

# - name: create MySQL user "{{ __project_db_user_name }}" for database "{{ __project_db_name }}"
#   mysql_user:
#     login_user: root
#     login_password: "{{ __root_new_password }}"
#     user: "{{ __project_db_user_name }}"
#     password: "{{ __project_db_user_password }}"
#     host: localhost
#     priv: "{{ __project_db_name }}.*:ALL,GRANT"
#     state: present
#   when: __project_db_create